# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from lte.protos import abort_session_pb2 as lte_dot_protos_dot_abort__session__pb2


class AbortSessionResponderStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AbortSession = channel.unary_unary(
                '/magma.lte.AbortSessionResponder/AbortSession',
                request_serializer=lte_dot_protos_dot_abort__session__pb2.AbortSessionRequest.SerializeToString,
                response_deserializer=lte_dot_protos_dot_abort__session__pb2.AbortSessionResult.FromString,
                )


class AbortSessionResponderServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AbortSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AbortSessionResponderServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AbortSession': grpc.unary_unary_rpc_method_handler(
                    servicer.AbortSession,
                    request_deserializer=lte_dot_protos_dot_abort__session__pb2.AbortSessionRequest.FromString,
                    response_serializer=lte_dot_protos_dot_abort__session__pb2.AbortSessionResult.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'magma.lte.AbortSessionResponder', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AbortSessionResponder(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AbortSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.lte.AbortSessionResponder/AbortSession',
            lte_dot_protos_dot_abort__session__pb2.AbortSessionRequest.SerializeToString,
            lte_dot_protos_dot_abort__session__pb2.AbortSessionResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
