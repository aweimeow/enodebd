# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from lte.protos import subscriberdb_pb2 as lte_dot_protos_dot_subscriberdb__pb2
from orc8r.protos import common_pb2 as orc8r_dot_protos_dot_common__pb2


class SubscriberDBStub(object):
    """--------------------------------------------------------------------------
    SubscriberDB gateway service definition.
    --------------------------------------------------------------------------
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddSubscriber = channel.unary_unary(
                '/magma.lte.SubscriberDB/AddSubscriber',
                request_serializer=lte_dot_protos_dot_subscriberdb__pb2.SubscriberData.SerializeToString,
                response_deserializer=orc8r_dot_protos_dot_common__pb2.Void.FromString,
                )
        self.DeleteSubscriber = channel.unary_unary(
                '/magma.lte.SubscriberDB/DeleteSubscriber',
                request_serializer=lte_dot_protos_dot_subscriberdb__pb2.SubscriberID.SerializeToString,
                response_deserializer=orc8r_dot_protos_dot_common__pb2.Void.FromString,
                )
        self.UpdateSubscriber = channel.unary_unary(
                '/magma.lte.SubscriberDB/UpdateSubscriber',
                request_serializer=lte_dot_protos_dot_subscriberdb__pb2.SubscriberUpdate.SerializeToString,
                response_deserializer=orc8r_dot_protos_dot_common__pb2.Void.FromString,
                )
        self.GetSubscriberData = channel.unary_unary(
                '/magma.lte.SubscriberDB/GetSubscriberData',
                request_serializer=lte_dot_protos_dot_subscriberdb__pb2.SubscriberID.SerializeToString,
                response_deserializer=lte_dot_protos_dot_subscriberdb__pb2.SubscriberData.FromString,
                )
        self.ListSubscribers = channel.unary_unary(
                '/magma.lte.SubscriberDB/ListSubscribers',
                request_serializer=orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
                response_deserializer=lte_dot_protos_dot_subscriberdb__pb2.SubscriberIDSet.FromString,
                )


class SubscriberDBServicer(object):
    """--------------------------------------------------------------------------
    SubscriberDB gateway service definition.
    --------------------------------------------------------------------------
    """

    def AddSubscriber(self, request, context):
        """Adds a new subscriber to the store.
        Throws ALREADY_EXISTS if the subscriber already exists.

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteSubscriber(self, request, context):
        """Deletes an existing subscriber.
        If the subscriber is not already present, this request is ignored.

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateSubscriber(self, request, context):
        """Updates an existing subscriber.
        Throws NOT_FOUND if the subscriber is missing.

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSubscriberData(self, request, context):
        """Returns the SubscriberData for a subscriber.
        Throws NOT_FOUND if the subscriber is missing.

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSubscribers(self, request, context):
        """List the subscribers in the store.

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SubscriberDBServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddSubscriber': grpc.unary_unary_rpc_method_handler(
                    servicer.AddSubscriber,
                    request_deserializer=lte_dot_protos_dot_subscriberdb__pb2.SubscriberData.FromString,
                    response_serializer=orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
            ),
            'DeleteSubscriber': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteSubscriber,
                    request_deserializer=lte_dot_protos_dot_subscriberdb__pb2.SubscriberID.FromString,
                    response_serializer=orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
            ),
            'UpdateSubscriber': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateSubscriber,
                    request_deserializer=lte_dot_protos_dot_subscriberdb__pb2.SubscriberUpdate.FromString,
                    response_serializer=orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
            ),
            'GetSubscriberData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSubscriberData,
                    request_deserializer=lte_dot_protos_dot_subscriberdb__pb2.SubscriberID.FromString,
                    response_serializer=lte_dot_protos_dot_subscriberdb__pb2.SubscriberData.SerializeToString,
            ),
            'ListSubscribers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSubscribers,
                    request_deserializer=orc8r_dot_protos_dot_common__pb2.Void.FromString,
                    response_serializer=lte_dot_protos_dot_subscriberdb__pb2.SubscriberIDSet.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'magma.lte.SubscriberDB', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SubscriberDB(object):
    """--------------------------------------------------------------------------
    SubscriberDB gateway service definition.
    --------------------------------------------------------------------------
    """

    @staticmethod
    def AddSubscriber(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.lte.SubscriberDB/AddSubscriber',
            lte_dot_protos_dot_subscriberdb__pb2.SubscriberData.SerializeToString,
            orc8r_dot_protos_dot_common__pb2.Void.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteSubscriber(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.lte.SubscriberDB/DeleteSubscriber',
            lte_dot_protos_dot_subscriberdb__pb2.SubscriberID.SerializeToString,
            orc8r_dot_protos_dot_common__pb2.Void.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateSubscriber(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.lte.SubscriberDB/UpdateSubscriber',
            lte_dot_protos_dot_subscriberdb__pb2.SubscriberUpdate.SerializeToString,
            orc8r_dot_protos_dot_common__pb2.Void.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSubscriberData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.lte.SubscriberDB/GetSubscriberData',
            lte_dot_protos_dot_subscriberdb__pb2.SubscriberID.SerializeToString,
            lte_dot_protos_dot_subscriberdb__pb2.SubscriberData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSubscribers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.lte.SubscriberDB/ListSubscribers',
            orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
            lte_dot_protos_dot_subscriberdb__pb2.SubscriberIDSet.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class SubscriberDBCloudStub(object):
    """--------------------------------------------------------------------------
    SubscriberDB cloud service definition.
    --------------------------------------------------------------------------
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CheckInSync = channel.unary_unary(
                '/magma.lte.SubscriberDBCloud/CheckInSync',
                request_serializer=lte_dot_protos_dot_subscriberdb__pb2.CheckInSyncRequest.SerializeToString,
                response_deserializer=lte_dot_protos_dot_subscriberdb__pb2.CheckInSyncResponse.FromString,
                )
        self.Sync = channel.unary_unary(
                '/magma.lte.SubscriberDBCloud/Sync',
                request_serializer=lte_dot_protos_dot_subscriberdb__pb2.SyncRequest.SerializeToString,
                response_deserializer=lte_dot_protos_dot_subscriberdb__pb2.SyncResponse.FromString,
                )
        self.ListSubscribers = channel.unary_unary(
                '/magma.lte.SubscriberDBCloud/ListSubscribers',
                request_serializer=lte_dot_protos_dot_subscriberdb__pb2.ListSubscribersRequest.SerializeToString,
                response_deserializer=lte_dot_protos_dot_subscriberdb__pb2.ListSubscribersResponse.FromString,
                )


class SubscriberDBCloudServicer(object):
    """--------------------------------------------------------------------------
    SubscriberDB cloud service definition.
    --------------------------------------------------------------------------
    """

    def CheckInSync(self, request, context):
        """CheckSubscribersInSync checks whether the client subscribers flat digest
        is up-to-date.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Sync(self, request, context):
        """SyncSubscribers returns the changeset of subscribers between client and
        cloud if the set is small; if the set is large, returns signal to resync.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSubscribers(self, request, context):
        """ListSubscribers lists pages of subscribers stored.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SubscriberDBCloudServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CheckInSync': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckInSync,
                    request_deserializer=lte_dot_protos_dot_subscriberdb__pb2.CheckInSyncRequest.FromString,
                    response_serializer=lte_dot_protos_dot_subscriberdb__pb2.CheckInSyncResponse.SerializeToString,
            ),
            'Sync': grpc.unary_unary_rpc_method_handler(
                    servicer.Sync,
                    request_deserializer=lte_dot_protos_dot_subscriberdb__pb2.SyncRequest.FromString,
                    response_serializer=lte_dot_protos_dot_subscriberdb__pb2.SyncResponse.SerializeToString,
            ),
            'ListSubscribers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSubscribers,
                    request_deserializer=lte_dot_protos_dot_subscriberdb__pb2.ListSubscribersRequest.FromString,
                    response_serializer=lte_dot_protos_dot_subscriberdb__pb2.ListSubscribersResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'magma.lte.SubscriberDBCloud', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SubscriberDBCloud(object):
    """--------------------------------------------------------------------------
    SubscriberDB cloud service definition.
    --------------------------------------------------------------------------
    """

    @staticmethod
    def CheckInSync(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.lte.SubscriberDBCloud/CheckInSync',
            lte_dot_protos_dot_subscriberdb__pb2.CheckInSyncRequest.SerializeToString,
            lte_dot_protos_dot_subscriberdb__pb2.CheckInSyncResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Sync(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.lte.SubscriberDBCloud/Sync',
            lte_dot_protos_dot_subscriberdb__pb2.SyncRequest.SerializeToString,
            lte_dot_protos_dot_subscriberdb__pb2.SyncResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSubscribers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.lte.SubscriberDBCloud/ListSubscribers',
            lte_dot_protos_dot_subscriberdb__pb2.ListSubscribersRequest.SerializeToString,
            lte_dot_protos_dot_subscriberdb__pb2.ListSubscribersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
