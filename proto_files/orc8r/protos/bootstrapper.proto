// SPDX-FileCopyrightText: 2020 The Magma Authors.
// SPDX-FileCopyrightText: 2022 Open Networking Foundation <support@opennetworking.org>
//
// SPDX-License-Identifier: BSD-3-Clause

syntax = "proto3";

import "orc8r/protos/certifier.proto";
import "orc8r/protos/identity.proto";

package magma.orc8r;
option go_package = "magma/orc8r/lib/go/protos";

message Challenge {
  ChallengeKey.KeyType key_type = 1;
  bytes challenge = 2;
}

// --------------------------------------------------------------------------
// Challenge key stores the key used for challenge-response during bootstrap.
// --------------------------------------------------------------------------
message ChallengeKey {
  enum KeyType {
    ECHO = 0;
    SOFTWARE_RSA_SHA256 = 1;
    SOFTWARE_ECDSA_SHA256 = 2;
  }

  KeyType key_type = 1;
  // Public key encoded in DER format
  bytes key = 2;
}

message Response {
  message Echo {
    bytes response = 1;
  }
  message RSA {
    bytes signature = 1;
  }
  message ECDSA {
    bytes r = 1;
    bytes s = 2;
  }

  AccessGatewayID hw_id = 1;
  bytes challenge = 2;
  oneof response {
    Echo echo_response = 3;
    RSA rsa_response = 4;
    ECDSA ecdsa_response = 5;
  }
  CSR csr = 6;
}

// Note that the security of this service is dependent on TLS to protect
// against MITM and replay attacks
service Bootstrapper {
  // get the challange for gateway specified in hw_id (AccessGatewayID)
  rpc GetChallenge (AccessGatewayID) returns (Challenge) {}

  // send back response and csr for signing
  // Returns signed certificate.
  rpc RequestSign (Response) returns (Certificate) {}
}
