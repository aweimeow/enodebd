# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from orc8r.protos import common_pb2 as orc8r_dot_protos_dot_common__pb2
from orc8r.protos import metricsd_pb2 as orc8r_dot_protos_dot_metricsd__pb2
from orc8r.protos import service303_pb2 as orc8r_dot_protos_dot_service303__pb2


class Service303Stub(object):
    """--------------------------------------------------------------------------
    Service303 interface definition.

    Service303 is named after fb303, which was named after TB-303
    https://en.wikipedia.org/wiki/Roland_TB-303.

    The Service303 interface implements a set of functionalities which
    all Magma services expose.
    --------------------------------------------------------------------------
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetServiceInfo = channel.unary_unary(
                '/magma.orc8r.Service303/GetServiceInfo',
                request_serializer=orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
                response_deserializer=orc8r_dot_protos_dot_service303__pb2.ServiceInfo.FromString,
                )
        self.StopService = channel.unary_unary(
                '/magma.orc8r.Service303/StopService',
                request_serializer=orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
                response_deserializer=orc8r_dot_protos_dot_common__pb2.Void.FromString,
                )
        self.GetMetrics = channel.unary_unary(
                '/magma.orc8r.Service303/GetMetrics',
                request_serializer=orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
                response_deserializer=orc8r_dot_protos_dot_metricsd__pb2.MetricsContainer.FromString,
                )
        self.SetLogLevel = channel.unary_unary(
                '/magma.orc8r.Service303/SetLogLevel',
                request_serializer=orc8r_dot_protos_dot_service303__pb2.LogLevelMessage.SerializeToString,
                response_deserializer=orc8r_dot_protos_dot_common__pb2.Void.FromString,
                )
        self.SetLogVerbosity = channel.unary_unary(
                '/magma.orc8r.Service303/SetLogVerbosity',
                request_serializer=orc8r_dot_protos_dot_service303__pb2.LogVerbosity.SerializeToString,
                response_deserializer=orc8r_dot_protos_dot_common__pb2.Void.FromString,
                )
        self.ReloadServiceConfig = channel.unary_unary(
                '/magma.orc8r.Service303/ReloadServiceConfig',
                request_serializer=orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
                response_deserializer=orc8r_dot_protos_dot_service303__pb2.ReloadConfigResponse.FromString,
                )
        self.GetOperationalStates = channel.unary_unary(
                '/magma.orc8r.Service303/GetOperationalStates',
                request_serializer=orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
                response_deserializer=orc8r_dot_protos_dot_service303__pb2.GetOperationalStatesResponse.FromString,
                )


class Service303Servicer(object):
    """--------------------------------------------------------------------------
    Service303 interface definition.

    Service303 is named after fb303, which was named after TB-303
    https://en.wikipedia.org/wiki/Roland_TB-303.

    The Service303 interface implements a set of functionalities which
    all Magma services expose.
    --------------------------------------------------------------------------
    """

    def GetServiceInfo(self, request, context):
        """Returns the service level info like name, version, state, status, etc.

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopService(self, request, context):
        """Request to stop the service gracefully.

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMetrics(self, request, context):
        """Collects metrics from the service
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetLogLevel(self, request, context):
        """Set logging level
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetLogVerbosity(self, request, context):
        """Set logging verbosity The larger, the more verbose. default 0
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReloadServiceConfig(self, request, context):
        """Requests service reloads config files loaded on startup (<servicename>.yml)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOperationalStates(self, request, context):
        """Returns the  operational states of devices managed by this service.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_Service303Servicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetServiceInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServiceInfo,
                    request_deserializer=orc8r_dot_protos_dot_common__pb2.Void.FromString,
                    response_serializer=orc8r_dot_protos_dot_service303__pb2.ServiceInfo.SerializeToString,
            ),
            'StopService': grpc.unary_unary_rpc_method_handler(
                    servicer.StopService,
                    request_deserializer=orc8r_dot_protos_dot_common__pb2.Void.FromString,
                    response_serializer=orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
            ),
            'GetMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMetrics,
                    request_deserializer=orc8r_dot_protos_dot_common__pb2.Void.FromString,
                    response_serializer=orc8r_dot_protos_dot_metricsd__pb2.MetricsContainer.SerializeToString,
            ),
            'SetLogLevel': grpc.unary_unary_rpc_method_handler(
                    servicer.SetLogLevel,
                    request_deserializer=orc8r_dot_protos_dot_service303__pb2.LogLevelMessage.FromString,
                    response_serializer=orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
            ),
            'SetLogVerbosity': grpc.unary_unary_rpc_method_handler(
                    servicer.SetLogVerbosity,
                    request_deserializer=orc8r_dot_protos_dot_service303__pb2.LogVerbosity.FromString,
                    response_serializer=orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
            ),
            'ReloadServiceConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.ReloadServiceConfig,
                    request_deserializer=orc8r_dot_protos_dot_common__pb2.Void.FromString,
                    response_serializer=orc8r_dot_protos_dot_service303__pb2.ReloadConfigResponse.SerializeToString,
            ),
            'GetOperationalStates': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOperationalStates,
                    request_deserializer=orc8r_dot_protos_dot_common__pb2.Void.FromString,
                    response_serializer=orc8r_dot_protos_dot_service303__pb2.GetOperationalStatesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'magma.orc8r.Service303', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Service303(object):
    """--------------------------------------------------------------------------
    Service303 interface definition.

    Service303 is named after fb303, which was named after TB-303
    https://en.wikipedia.org/wiki/Roland_TB-303.

    The Service303 interface implements a set of functionalities which
    all Magma services expose.
    --------------------------------------------------------------------------
    """

    @staticmethod
    def GetServiceInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.orc8r.Service303/GetServiceInfo',
            orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
            orc8r_dot_protos_dot_service303__pb2.ServiceInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.orc8r.Service303/StopService',
            orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
            orc8r_dot_protos_dot_common__pb2.Void.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.orc8r.Service303/GetMetrics',
            orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
            orc8r_dot_protos_dot_metricsd__pb2.MetricsContainer.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetLogLevel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.orc8r.Service303/SetLogLevel',
            orc8r_dot_protos_dot_service303__pb2.LogLevelMessage.SerializeToString,
            orc8r_dot_protos_dot_common__pb2.Void.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetLogVerbosity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.orc8r.Service303/SetLogVerbosity',
            orc8r_dot_protos_dot_service303__pb2.LogVerbosity.SerializeToString,
            orc8r_dot_protos_dot_common__pb2.Void.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReloadServiceConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.orc8r.Service303/ReloadServiceConfig',
            orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
            orc8r_dot_protos_dot_service303__pb2.ReloadConfigResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOperationalStates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.orc8r.Service303/GetOperationalStates',
            orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
            orc8r_dot_protos_dot_service303__pb2.GetOperationalStatesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
