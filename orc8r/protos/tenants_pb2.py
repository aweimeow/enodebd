# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: orc8r/protos/tenants.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from orc8r.protos import common_pb2 as orc8r_dot_protos_dot_common__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='orc8r/protos/tenants.proto',
  package='magma.orc8r',
  syntax='proto3',
  serialized_options=b'Z\031magma/orc8r/lib/go/protos',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x1aorc8r/protos/tenants.proto\x12\x0bmagma.orc8r\x1a\x19orc8r/protos/common.proto\"\x1e\n\x10GetTenantRequest\x12\n\n\x02id\x18\x01 \x01(\x03\"(\n\x06Tenant\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x10\n\x08networks\x18\x02 \x03(\t\"7\n\nTenantList\x12)\n\x07tenants\x18\x01 \x03(\x0b\x32\x18.magma.orc8r.IDAndTenant\">\n\x0bIDAndTenant\x12\n\n\x02id\x18\x01 \x01(\x03\x12#\n\x06tenant\x18\x02 \x01(\x0b\x32\x13.magma.orc8r.Tenant2\xd1\x02\n\x0eTenantsService\x12=\n\rGetAllTenants\x12\x11.magma.orc8r.Void\x1a\x17.magma.orc8r.TenantList\"\x00\x12\x41\n\tGetTenant\x12\x1d.magma.orc8r.GetTenantRequest\x1a\x13.magma.orc8r.Tenant\"\x00\x12=\n\x0c\x43reateTenant\x12\x18.magma.orc8r.IDAndTenant\x1a\x11.magma.orc8r.Void\"\x00\x12:\n\tSetTenant\x12\x18.magma.orc8r.IDAndTenant\x1a\x11.magma.orc8r.Void\"\x00\x12\x42\n\x0c\x44\x65leteTenant\x12\x1d.magma.orc8r.GetTenantRequest\x1a\x11.magma.orc8r.Void\"\x00\x42\x1bZ\x19magma/orc8r/lib/go/protosb\x06proto3'
  ,
  dependencies=[orc8r_dot_protos_dot_common__pb2.DESCRIPTOR,])




_GETTENANTREQUEST = _descriptor.Descriptor(
  name='GetTenantRequest',
  full_name='magma.orc8r.GetTenantRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='magma.orc8r.GetTenantRequest.id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=70,
  serialized_end=100,
)


_TENANT = _descriptor.Descriptor(
  name='Tenant',
  full_name='magma.orc8r.Tenant',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='magma.orc8r.Tenant.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='networks', full_name='magma.orc8r.Tenant.networks', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=102,
  serialized_end=142,
)


_TENANTLIST = _descriptor.Descriptor(
  name='TenantList',
  full_name='magma.orc8r.TenantList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='tenants', full_name='magma.orc8r.TenantList.tenants', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=144,
  serialized_end=199,
)


_IDANDTENANT = _descriptor.Descriptor(
  name='IDAndTenant',
  full_name='magma.orc8r.IDAndTenant',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='magma.orc8r.IDAndTenant.id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='tenant', full_name='magma.orc8r.IDAndTenant.tenant', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=201,
  serialized_end=263,
)

_TENANTLIST.fields_by_name['tenants'].message_type = _IDANDTENANT
_IDANDTENANT.fields_by_name['tenant'].message_type = _TENANT
DESCRIPTOR.message_types_by_name['GetTenantRequest'] = _GETTENANTREQUEST
DESCRIPTOR.message_types_by_name['Tenant'] = _TENANT
DESCRIPTOR.message_types_by_name['TenantList'] = _TENANTLIST
DESCRIPTOR.message_types_by_name['IDAndTenant'] = _IDANDTENANT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

GetTenantRequest = _reflection.GeneratedProtocolMessageType('GetTenantRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETTENANTREQUEST,
  '__module__' : 'orc8r.protos.tenants_pb2'
  # @@protoc_insertion_point(class_scope:magma.orc8r.GetTenantRequest)
  })
_sym_db.RegisterMessage(GetTenantRequest)

Tenant = _reflection.GeneratedProtocolMessageType('Tenant', (_message.Message,), {
  'DESCRIPTOR' : _TENANT,
  '__module__' : 'orc8r.protos.tenants_pb2'
  # @@protoc_insertion_point(class_scope:magma.orc8r.Tenant)
  })
_sym_db.RegisterMessage(Tenant)

TenantList = _reflection.GeneratedProtocolMessageType('TenantList', (_message.Message,), {
  'DESCRIPTOR' : _TENANTLIST,
  '__module__' : 'orc8r.protos.tenants_pb2'
  # @@protoc_insertion_point(class_scope:magma.orc8r.TenantList)
  })
_sym_db.RegisterMessage(TenantList)

IDAndTenant = _reflection.GeneratedProtocolMessageType('IDAndTenant', (_message.Message,), {
  'DESCRIPTOR' : _IDANDTENANT,
  '__module__' : 'orc8r.protos.tenants_pb2'
  # @@protoc_insertion_point(class_scope:magma.orc8r.IDAndTenant)
  })
_sym_db.RegisterMessage(IDAndTenant)


DESCRIPTOR._options = None

_TENANTSSERVICE = _descriptor.ServiceDescriptor(
  name='TenantsService',
  full_name='magma.orc8r.TenantsService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=266,
  serialized_end=603,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetAllTenants',
    full_name='magma.orc8r.TenantsService.GetAllTenants',
    index=0,
    containing_service=None,
    input_type=orc8r_dot_protos_dot_common__pb2._VOID,
    output_type=_TENANTLIST,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetTenant',
    full_name='magma.orc8r.TenantsService.GetTenant',
    index=1,
    containing_service=None,
    input_type=_GETTENANTREQUEST,
    output_type=_TENANT,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='CreateTenant',
    full_name='magma.orc8r.TenantsService.CreateTenant',
    index=2,
    containing_service=None,
    input_type=_IDANDTENANT,
    output_type=orc8r_dot_protos_dot_common__pb2._VOID,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='SetTenant',
    full_name='magma.orc8r.TenantsService.SetTenant',
    index=3,
    containing_service=None,
    input_type=_IDANDTENANT,
    output_type=orc8r_dot_protos_dot_common__pb2._VOID,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='DeleteTenant',
    full_name='magma.orc8r.TenantsService.DeleteTenant',
    index=4,
    containing_service=None,
    input_type=_GETTENANTREQUEST,
    output_type=orc8r_dot_protos_dot_common__pb2._VOID,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_TENANTSSERVICE)

DESCRIPTOR.services_by_name['TenantsService'] = _TENANTSSERVICE

# @@protoc_insertion_point(module_scope)
