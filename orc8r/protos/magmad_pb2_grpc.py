# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from orc8r.protos import common_pb2 as orc8r_dot_protos_dot_common__pb2
from orc8r.protos import magmad_pb2 as orc8r_dot_protos_dot_magmad__pb2
from orc8r.protos import mconfig_pb2 as orc8r_dot_protos_dot_mconfig__pb2


class MagmadStub(object):
    """--------------------------------------------------------------------------
    Magmad service definition.
    --------------------------------------------------------------------------
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StartServices = channel.unary_unary(
                '/magma.orc8r.Magmad/StartServices',
                request_serializer=orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
                response_deserializer=orc8r_dot_protos_dot_common__pb2.Void.FromString,
                )
        self.StopServices = channel.unary_unary(
                '/magma.orc8r.Magmad/StopServices',
                request_serializer=orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
                response_deserializer=orc8r_dot_protos_dot_common__pb2.Void.FromString,
                )
        self.Reboot = channel.unary_unary(
                '/magma.orc8r.Magmad/Reboot',
                request_serializer=orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
                response_deserializer=orc8r_dot_protos_dot_common__pb2.Void.FromString,
                )
        self.RestartServices = channel.unary_unary(
                '/magma.orc8r.Magmad/RestartServices',
                request_serializer=orc8r_dot_protos_dot_magmad__pb2.RestartServicesRequest.SerializeToString,
                response_deserializer=orc8r_dot_protos_dot_common__pb2.Void.FromString,
                )
        self.SetConfigs = channel.unary_unary(
                '/magma.orc8r.Magmad/SetConfigs',
                request_serializer=orc8r_dot_protos_dot_mconfig__pb2.GatewayConfigs.SerializeToString,
                response_deserializer=orc8r_dot_protos_dot_common__pb2.Void.FromString,
                )
        self.GetConfigs = channel.unary_unary(
                '/magma.orc8r.Magmad/GetConfigs',
                request_serializer=orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
                response_deserializer=orc8r_dot_protos_dot_mconfig__pb2.GatewayConfigs.FromString,
                )
        self.RunNetworkTests = channel.unary_unary(
                '/magma.orc8r.Magmad/RunNetworkTests',
                request_serializer=orc8r_dot_protos_dot_magmad__pb2.NetworkTestRequest.SerializeToString,
                response_deserializer=orc8r_dot_protos_dot_magmad__pb2.NetworkTestResponse.FromString,
                )
        self.GetGatewayId = channel.unary_unary(
                '/magma.orc8r.Magmad/GetGatewayId',
                request_serializer=orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
                response_deserializer=orc8r_dot_protos_dot_magmad__pb2.GetGatewayIdResponse.FromString,
                )
        self.GenericCommand = channel.unary_unary(
                '/magma.orc8r.Magmad/GenericCommand',
                request_serializer=orc8r_dot_protos_dot_magmad__pb2.GenericCommandParams.SerializeToString,
                response_deserializer=orc8r_dot_protos_dot_magmad__pb2.GenericCommandResponse.FromString,
                )
        self.TailLogs = channel.unary_stream(
                '/magma.orc8r.Magmad/TailLogs',
                request_serializer=orc8r_dot_protos_dot_magmad__pb2.TailLogsRequest.SerializeToString,
                response_deserializer=orc8r_dot_protos_dot_magmad__pb2.LogLine.FromString,
                )
        self.CheckStateless = channel.unary_unary(
                '/magma.orc8r.Magmad/CheckStateless',
                request_serializer=orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
                response_deserializer=orc8r_dot_protos_dot_magmad__pb2.CheckStatelessResponse.FromString,
                )
        self.ConfigureStateless = channel.unary_unary(
                '/magma.orc8r.Magmad/ConfigureStateless',
                request_serializer=orc8r_dot_protos_dot_magmad__pb2.ConfigureStatelessRequest.SerializeToString,
                response_deserializer=orc8r_dot_protos_dot_common__pb2.Void.FromString,
                )


class MagmadServicer(object):
    """--------------------------------------------------------------------------
    Magmad service definition.
    --------------------------------------------------------------------------
    """

    def StartServices(self, request, context):
        """Starts all magma services
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopServices(self, request, context):
        """Stops all magma services
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Reboot(self, request, context):
        """Reboot the gateway device
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RestartServices(self, request, context):
        """Restart specified magma services
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetConfigs(self, request, context):
        """Updates AG configs and restarts affected AG services
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConfigs(self, request, context):
        """Get current AG configs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RunNetworkTests(self, request, context):
        """Execute some network commands to check gateway network health
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGatewayId(self, request, context):
        """Get gateway hardware ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenericCommand(self, request, context):
        """Execute generic command
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TailLogs(self, request, context):
        """Get stream of logs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckStateless(self, request, context):
        """CheckStateless returns whether AGW is stateless or stateful
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfigureStateless(self, request, context):
        """ConfigureStateless configures the stateless mode of AGW
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MagmadServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StartServices': grpc.unary_unary_rpc_method_handler(
                    servicer.StartServices,
                    request_deserializer=orc8r_dot_protos_dot_common__pb2.Void.FromString,
                    response_serializer=orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
            ),
            'StopServices': grpc.unary_unary_rpc_method_handler(
                    servicer.StopServices,
                    request_deserializer=orc8r_dot_protos_dot_common__pb2.Void.FromString,
                    response_serializer=orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
            ),
            'Reboot': grpc.unary_unary_rpc_method_handler(
                    servicer.Reboot,
                    request_deserializer=orc8r_dot_protos_dot_common__pb2.Void.FromString,
                    response_serializer=orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
            ),
            'RestartServices': grpc.unary_unary_rpc_method_handler(
                    servicer.RestartServices,
                    request_deserializer=orc8r_dot_protos_dot_magmad__pb2.RestartServicesRequest.FromString,
                    response_serializer=orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
            ),
            'SetConfigs': grpc.unary_unary_rpc_method_handler(
                    servicer.SetConfigs,
                    request_deserializer=orc8r_dot_protos_dot_mconfig__pb2.GatewayConfigs.FromString,
                    response_serializer=orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
            ),
            'GetConfigs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConfigs,
                    request_deserializer=orc8r_dot_protos_dot_common__pb2.Void.FromString,
                    response_serializer=orc8r_dot_protos_dot_mconfig__pb2.GatewayConfigs.SerializeToString,
            ),
            'RunNetworkTests': grpc.unary_unary_rpc_method_handler(
                    servicer.RunNetworkTests,
                    request_deserializer=orc8r_dot_protos_dot_magmad__pb2.NetworkTestRequest.FromString,
                    response_serializer=orc8r_dot_protos_dot_magmad__pb2.NetworkTestResponse.SerializeToString,
            ),
            'GetGatewayId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGatewayId,
                    request_deserializer=orc8r_dot_protos_dot_common__pb2.Void.FromString,
                    response_serializer=orc8r_dot_protos_dot_magmad__pb2.GetGatewayIdResponse.SerializeToString,
            ),
            'GenericCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.GenericCommand,
                    request_deserializer=orc8r_dot_protos_dot_magmad__pb2.GenericCommandParams.FromString,
                    response_serializer=orc8r_dot_protos_dot_magmad__pb2.GenericCommandResponse.SerializeToString,
            ),
            'TailLogs': grpc.unary_stream_rpc_method_handler(
                    servicer.TailLogs,
                    request_deserializer=orc8r_dot_protos_dot_magmad__pb2.TailLogsRequest.FromString,
                    response_serializer=orc8r_dot_protos_dot_magmad__pb2.LogLine.SerializeToString,
            ),
            'CheckStateless': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckStateless,
                    request_deserializer=orc8r_dot_protos_dot_common__pb2.Void.FromString,
                    response_serializer=orc8r_dot_protos_dot_magmad__pb2.CheckStatelessResponse.SerializeToString,
            ),
            'ConfigureStateless': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigureStateless,
                    request_deserializer=orc8r_dot_protos_dot_magmad__pb2.ConfigureStatelessRequest.FromString,
                    response_serializer=orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'magma.orc8r.Magmad', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Magmad(object):
    """--------------------------------------------------------------------------
    Magmad service definition.
    --------------------------------------------------------------------------
    """

    @staticmethod
    def StartServices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.orc8r.Magmad/StartServices',
            orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
            orc8r_dot_protos_dot_common__pb2.Void.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopServices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.orc8r.Magmad/StopServices',
            orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
            orc8r_dot_protos_dot_common__pb2.Void.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Reboot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.orc8r.Magmad/Reboot',
            orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
            orc8r_dot_protos_dot_common__pb2.Void.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RestartServices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.orc8r.Magmad/RestartServices',
            orc8r_dot_protos_dot_magmad__pb2.RestartServicesRequest.SerializeToString,
            orc8r_dot_protos_dot_common__pb2.Void.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetConfigs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.orc8r.Magmad/SetConfigs',
            orc8r_dot_protos_dot_mconfig__pb2.GatewayConfigs.SerializeToString,
            orc8r_dot_protos_dot_common__pb2.Void.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetConfigs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.orc8r.Magmad/GetConfigs',
            orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
            orc8r_dot_protos_dot_mconfig__pb2.GatewayConfigs.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RunNetworkTests(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.orc8r.Magmad/RunNetworkTests',
            orc8r_dot_protos_dot_magmad__pb2.NetworkTestRequest.SerializeToString,
            orc8r_dot_protos_dot_magmad__pb2.NetworkTestResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetGatewayId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.orc8r.Magmad/GetGatewayId',
            orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
            orc8r_dot_protos_dot_magmad__pb2.GetGatewayIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GenericCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.orc8r.Magmad/GenericCommand',
            orc8r_dot_protos_dot_magmad__pb2.GenericCommandParams.SerializeToString,
            orc8r_dot_protos_dot_magmad__pb2.GenericCommandResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TailLogs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/magma.orc8r.Magmad/TailLogs',
            orc8r_dot_protos_dot_magmad__pb2.TailLogsRequest.SerializeToString,
            orc8r_dot_protos_dot_magmad__pb2.LogLine.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckStateless(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.orc8r.Magmad/CheckStateless',
            orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
            orc8r_dot_protos_dot_magmad__pb2.CheckStatelessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ConfigureStateless(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.orc8r.Magmad/ConfigureStateless',
            orc8r_dot_protos_dot_magmad__pb2.ConfigureStatelessRequest.SerializeToString,
            orc8r_dot_protos_dot_common__pb2.Void.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
