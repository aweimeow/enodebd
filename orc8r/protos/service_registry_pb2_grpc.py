# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from orc8r.protos import common_pb2 as orc8r_dot_protos_dot_common__pb2
from orc8r.protos import service_registry_pb2 as orc8r_dot_protos_dot_service__registry__pb2


class ServiceRegistryStub(object):
    """--------------------------------------------------------------------------
    ServiceRegistry supports dynamic service discovery.
    --------------------------------------------------------------------------
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListAllServices = channel.unary_unary(
                '/magma.orc8r.ServiceRegistry/ListAllServices',
                request_serializer=orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
                response_deserializer=orc8r_dot_protos_dot_service__registry__pb2.ListAllServicesResponse.FromString,
                )
        self.FindServices = channel.unary_unary(
                '/magma.orc8r.ServiceRegistry/FindServices',
                request_serializer=orc8r_dot_protos_dot_service__registry__pb2.FindServicesRequest.SerializeToString,
                response_deserializer=orc8r_dot_protos_dot_service__registry__pb2.FindServicesResponse.FromString,
                )
        self.GetServiceAddress = channel.unary_unary(
                '/magma.orc8r.ServiceRegistry/GetServiceAddress',
                request_serializer=orc8r_dot_protos_dot_service__registry__pb2.GetServiceAddressRequest.SerializeToString,
                response_deserializer=orc8r_dot_protos_dot_service__registry__pb2.GetServiceAddressResponse.FromString,
                )
        self.GetHttpServerAddress = channel.unary_unary(
                '/magma.orc8r.ServiceRegistry/GetHttpServerAddress',
                request_serializer=orc8r_dot_protos_dot_service__registry__pb2.GetHttpServerAddressRequest.SerializeToString,
                response_deserializer=orc8r_dot_protos_dot_service__registry__pb2.GetHttpServerAddressResponse.FromString,
                )
        self.GetAnnotation = channel.unary_unary(
                '/magma.orc8r.ServiceRegistry/GetAnnotation',
                request_serializer=orc8r_dot_protos_dot_service__registry__pb2.GetAnnotationRequest.SerializeToString,
                response_deserializer=orc8r_dot_protos_dot_service__registry__pb2.GetAnnotationResponse.FromString,
                )


class ServiceRegistryServicer(object):
    """--------------------------------------------------------------------------
    ServiceRegistry supports dynamic service discovery.
    --------------------------------------------------------------------------
    """

    def ListAllServices(self, request, context):
        """ListAllServices returns the service name of all services in the registry.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindServices(self, request, context):
        """FindServices returns the names of all services that have the passed label.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetServiceAddress(self, request, context):
        """GetServiceAddress returns the service address of a given service.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHttpServerAddress(self, request, context):
        """GetHttpServerAddress returns the address for a service's HTTP server.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAnnotation(self, request, context):
        """GetAnnotation returns the annotation value for the passed annotation
        name.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServiceRegistryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListAllServices': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAllServices,
                    request_deserializer=orc8r_dot_protos_dot_common__pb2.Void.FromString,
                    response_serializer=orc8r_dot_protos_dot_service__registry__pb2.ListAllServicesResponse.SerializeToString,
            ),
            'FindServices': grpc.unary_unary_rpc_method_handler(
                    servicer.FindServices,
                    request_deserializer=orc8r_dot_protos_dot_service__registry__pb2.FindServicesRequest.FromString,
                    response_serializer=orc8r_dot_protos_dot_service__registry__pb2.FindServicesResponse.SerializeToString,
            ),
            'GetServiceAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServiceAddress,
                    request_deserializer=orc8r_dot_protos_dot_service__registry__pb2.GetServiceAddressRequest.FromString,
                    response_serializer=orc8r_dot_protos_dot_service__registry__pb2.GetServiceAddressResponse.SerializeToString,
            ),
            'GetHttpServerAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHttpServerAddress,
                    request_deserializer=orc8r_dot_protos_dot_service__registry__pb2.GetHttpServerAddressRequest.FromString,
                    response_serializer=orc8r_dot_protos_dot_service__registry__pb2.GetHttpServerAddressResponse.SerializeToString,
            ),
            'GetAnnotation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAnnotation,
                    request_deserializer=orc8r_dot_protos_dot_service__registry__pb2.GetAnnotationRequest.FromString,
                    response_serializer=orc8r_dot_protos_dot_service__registry__pb2.GetAnnotationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'magma.orc8r.ServiceRegistry', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ServiceRegistry(object):
    """--------------------------------------------------------------------------
    ServiceRegistry supports dynamic service discovery.
    --------------------------------------------------------------------------
    """

    @staticmethod
    def ListAllServices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.orc8r.ServiceRegistry/ListAllServices',
            orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
            orc8r_dot_protos_dot_service__registry__pb2.ListAllServicesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindServices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.orc8r.ServiceRegistry/FindServices',
            orc8r_dot_protos_dot_service__registry__pb2.FindServicesRequest.SerializeToString,
            orc8r_dot_protos_dot_service__registry__pb2.FindServicesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetServiceAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.orc8r.ServiceRegistry/GetServiceAddress',
            orc8r_dot_protos_dot_service__registry__pb2.GetServiceAddressRequest.SerializeToString,
            orc8r_dot_protos_dot_service__registry__pb2.GetServiceAddressResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHttpServerAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.orc8r.ServiceRegistry/GetHttpServerAddress',
            orc8r_dot_protos_dot_service__registry__pb2.GetHttpServerAddressRequest.SerializeToString,
            orc8r_dot_protos_dot_service__registry__pb2.GetHttpServerAddressResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAnnotation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.orc8r.ServiceRegistry/GetAnnotation',
            orc8r_dot_protos_dot_service__registry__pb2.GetAnnotationRequest.SerializeToString,
            orc8r_dot_protos_dot_service__registry__pb2.GetAnnotationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
