# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from orc8r.protos import common_pb2 as orc8r_dot_protos_dot_common__pb2
from orc8r.protos import eventd_pb2 as orc8r_dot_protos_dot_eventd__pb2


class EventServiceStub(object):
    """--------------------------------------------------------------------------
    EventService provides an interface for structured event logging.
    --------------------------------------------------------------------------
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.LogEvent = channel.unary_unary(
                '/magma.orc8r.EventService/LogEvent',
                request_serializer=orc8r_dot_protos_dot_eventd__pb2.Event.SerializeToString,
                response_deserializer=orc8r_dot_protos_dot_common__pb2.Void.FromString,
                )


class EventServiceServicer(object):
    """--------------------------------------------------------------------------
    EventService provides an interface for structured event logging.
    --------------------------------------------------------------------------
    """

    def LogEvent(self, request, context):
        """Logs an event to FluentBit.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EventServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'LogEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.LogEvent,
                    request_deserializer=orc8r_dot_protos_dot_eventd__pb2.Event.FromString,
                    response_serializer=orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'magma.orc8r.EventService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class EventService(object):
    """--------------------------------------------------------------------------
    EventService provides an interface for structured event logging.
    --------------------------------------------------------------------------
    """

    @staticmethod
    def LogEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.orc8r.EventService/LogEvent',
            orc8r_dot_protos_dot_eventd__pb2.Event.SerializeToString,
            orc8r_dot_protos_dot_common__pb2.Void.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
