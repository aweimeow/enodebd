# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from orc8r.protos import common_pb2 as orc8r_dot_protos_dot_common__pb2
from orc8r.protos import state_pb2 as orc8r_dot_protos_dot_state__pb2


class StateServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetStates = channel.unary_unary(
                '/magma.orc8r.StateService/GetStates',
                request_serializer=orc8r_dot_protos_dot_state__pb2.GetStatesRequest.SerializeToString,
                response_deserializer=orc8r_dot_protos_dot_state__pb2.GetStatesResponse.FromString,
                )
        self.ReportStates = channel.unary_unary(
                '/magma.orc8r.StateService/ReportStates',
                request_serializer=orc8r_dot_protos_dot_state__pb2.ReportStatesRequest.SerializeToString,
                response_deserializer=orc8r_dot_protos_dot_state__pb2.ReportStatesResponse.FromString,
                )
        self.DeleteStates = channel.unary_unary(
                '/magma.orc8r.StateService/DeleteStates',
                request_serializer=orc8r_dot_protos_dot_state__pb2.DeleteStatesRequest.SerializeToString,
                response_deserializer=orc8r_dot_protos_dot_common__pb2.Void.FromString,
                )
        self.SyncStates = channel.unary_unary(
                '/magma.orc8r.StateService/SyncStates',
                request_serializer=orc8r_dot_protos_dot_state__pb2.SyncStatesRequest.SerializeToString,
                response_deserializer=orc8r_dot_protos_dot_state__pb2.SyncStatesResponse.FromString,
                )


class StateServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetStates(self, request, context):
        """GetStates retrieves states from blobstorage.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReportStates(self, request, context):
        """ReportStates saves states into blobstorage.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteStates(self, request, context):
        """DeleteStates deletes states from blobstorage.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SyncStates(self, request, context):
        """SyncStates retrieves states from blobstorage, compares their versions
        to the states included in the request, and returns the IDAndVersions
        that differ.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StateServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetStates': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStates,
                    request_deserializer=orc8r_dot_protos_dot_state__pb2.GetStatesRequest.FromString,
                    response_serializer=orc8r_dot_protos_dot_state__pb2.GetStatesResponse.SerializeToString,
            ),
            'ReportStates': grpc.unary_unary_rpc_method_handler(
                    servicer.ReportStates,
                    request_deserializer=orc8r_dot_protos_dot_state__pb2.ReportStatesRequest.FromString,
                    response_serializer=orc8r_dot_protos_dot_state__pb2.ReportStatesResponse.SerializeToString,
            ),
            'DeleteStates': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteStates,
                    request_deserializer=orc8r_dot_protos_dot_state__pb2.DeleteStatesRequest.FromString,
                    response_serializer=orc8r_dot_protos_dot_common__pb2.Void.SerializeToString,
            ),
            'SyncStates': grpc.unary_unary_rpc_method_handler(
                    servicer.SyncStates,
                    request_deserializer=orc8r_dot_protos_dot_state__pb2.SyncStatesRequest.FromString,
                    response_serializer=orc8r_dot_protos_dot_state__pb2.SyncStatesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'magma.orc8r.StateService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class StateService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetStates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.orc8r.StateService/GetStates',
            orc8r_dot_protos_dot_state__pb2.GetStatesRequest.SerializeToString,
            orc8r_dot_protos_dot_state__pb2.GetStatesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReportStates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.orc8r.StateService/ReportStates',
            orc8r_dot_protos_dot_state__pb2.ReportStatesRequest.SerializeToString,
            orc8r_dot_protos_dot_state__pb2.ReportStatesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteStates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.orc8r.StateService/DeleteStates',
            orc8r_dot_protos_dot_state__pb2.DeleteStatesRequest.SerializeToString,
            orc8r_dot_protos_dot_common__pb2.Void.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SyncStates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/magma.orc8r.StateService/SyncStates',
            orc8r_dot_protos_dot_state__pb2.SyncStatesRequest.SerializeToString,
            orc8r_dot_protos_dot_state__pb2.SyncStatesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
